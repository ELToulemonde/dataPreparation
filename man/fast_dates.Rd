% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast_dates.R
\name{fast_dates}
\alias{fast_dates}
\alias{as.Date.fast}
\alias{as.POSIXct.fast}
\alias{parse_date_time.fast}
\title{Faster date transformation}
\usage{
\method{as.Date}{fast}(x, ...)

\method{as.POSIXct}{fast}(x, ...)

parse_date_time.fast(x, ...)
}
\arguments{
\item{x}{An object to be converted}

\item{...}{other argument to pass to  \code{\link{as.Date}}}
}
\value{
methods return an object of class Date
}
\description{
Based on the trick that often dates are repeated in a column, we make date transformation
 faster by computing date transformation only on uniques.
}
\details{
Based on empirical experiences, it is faster to use this function if in average each 
date is present more than 2 time.
}
\examples{
# Work the same as as.Date
as.Date.fast("2018-01-01", format="\%Y-\%m-\%d")
# Work the same as as.Date
as.POSIXct.fast("2018-01-01", format="\%Y-\%m-\%d")
# Work the same as as.Date
parse_date_time.fast("2018-01-01", orders = "Ymd")
# Benchmark
\dontrun{
data(messy_adult)
microbenchmark::microbenchmark(
   as.Date(messy_adult[["date1"]], format = "\%Y-\%m-\%d"),
   as.Date.fast(messy_adult[["date1"]], format = "\%Y-\%m-\%d"),
   as.POSIXct(messy_adult[["date1"]], format = "\%Y-\%m-\%d"),
   as.POSIXct.fast(messy_adult[["date1"]], format = "\%Y-\%m-\%d")
)
# benchmark shows that it is way faster, especially for POSIXct
# "##NOT RUN:" mean that this example hasn't been run on CRAN since its long. But you can run it!
}
}
